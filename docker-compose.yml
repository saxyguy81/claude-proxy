version: '3.8'

services:
  # Main Keap MCP Service
  keap-mcp:
    build: .
    container_name: keap-mcp-service
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      # Persistent data storage
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; import httpx; asyncio.run(httpx.get('http://localhost:8000/health', timeout=5.0))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - keap_network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis for distributed caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: keap-mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - keap_network

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: keap-mcp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
    restart: unless-stopped
    networks:
      - keap_network
    depends_on:
      - keap-mcp

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: keap-mcp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - keap_network
    depends_on:
      - prometheus

  # Nginx reverse proxy with SSL (optional)
  nginx:
    image: nginx:alpine
    container_name: keap-mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - keap_network
    depends_on:
      - keap-mcp

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  keap_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16